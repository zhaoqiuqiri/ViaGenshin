name: Build

on:
  workflow_dispatch:
  push:
    branches: [main]
    paths:
      - "**/*.go"
      - "go.mod"
      - "go.sum"
      - ".github/workflows/*.yml"
  pull_request:
    types: [opened, synchronize, reopened]
    paths:
      - "**/*.go"
      - "go.mod"
      - "go.sum"
      - ".github/workflows/*.yml"

jobs:
  build:
    strategy:
      matrix:
        goos: [windows, linux, darwin]
        goarch: [amd64, 386, arm64]
        exclude:
          - goarch: 386
            goos: darwin
        include:
          # BEGIN Linux ARM 5 6 7
          - goos: linux
            goarch: arm
            goarm: 7
          - goos: linux
            goarch: arm
            goarm: 6
          - goos: linux
            goarch: arm
            goarm: 5
          # END Linux ARM 5 6 7
          # Windows ARM 7
          - goos: windows
            goarch: arm
            goarm: 7
      fail-fast: false

    runs-on: ubuntu-latest
    env:
      GOOS: ${{ matrix.goos }}
      GOARCH: ${{ matrix.goarch }}
      GOARM: ${{ matrix.goarm }}
      CGO_ENABLED: 0
    steps:
      - name: Checkout codebase
        uses: actions/checkout@v3

      - name: Show workflow information
        run: |
          export _NAME=$(jq ".[\"$GOOS-$GOARCH$GOARM$GOMIPS\"].friendlyName" -r < .github/build/friendly-filenames.json)
          echo "GOOS: $GOOS, GOARCH: $GOARCH, GOARM: $GOARM, GOMIPS: $GOMIPS, RELEASE_NAME: $_NAME"
          echo "ASSET_NAME=$_NAME" >> $GITHUB_ENV
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: "1.20"
          check-latest: true

      - name: Get project dependencies
        run: go mod download

      - name: Build ViaGenshin
        run: |
          mkdir -p build_assets
          go build -v -o build_assets/ViaGenshin -trimpath -ldflags "-s -w" ./cmd/ViaGenshin
      - name: Rename Windows ViaGenshin
        if: matrix.goos == 'windows'
        run: |
          cd ./build_assets || exit 1
          mv ViaGenshin ViaGenshin.exe
      - name: Copy README.md & LICENSE
        run: |
          cp -r ${GITHUB_WORKSPACE}/data ./build_assets/data
          mv ./build_assets/data/config.json ./build_assets/config.json.example
          cp ${GITHUB_WORKSPACE}/docs/README.md ./build_assets/README.md
          cp ${GITHUB_WORKSPACE}/LICENSE ./build_assets/LICENSE
      - name: Create ZIP archive
        shell: bash
        run: |
          pushd build_assets || exit 1
          touch -mt $(date +%Y01010000) *
          zip -9vr ../ViaGenshin-${{ env.ASSET_NAME }}.zip .
          popd || exit 1
          FILE=./ViaGenshin-${{ env.ASSET_NAME }}.zip
          DGST=$FILE.dgst
          for METHOD in {"md5","sha1","sha256","sha512"}
          do
            openssl dgst -$METHOD $FILE | sed 's/([^)]*)//g' >>$DGST
          done
      - name: Change the name
        run: |
          mv build_assets ViaGenshin-${{ env.ASSET_NAME }}
      - name: Upload files to Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ViaGenshin-${{ env.ASSET_NAME }}
          path: |
            ./ViaGenshin-${{ env.ASSET_NAME }}/*
